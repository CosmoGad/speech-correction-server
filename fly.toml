app = "speech-correction"
primary_region = "fra"  # Укажите ваш регион (например, "fra", "iad", "lax")

[build]
  dockerfile = "Dockerfile"  # Укажите путь к Dockerfile, если он находится в корне проекта

[env]
  PORT = "8080"  # Порт, который использует ваше приложение

[http_service]
  internal_port = 8080  # Внутренний порт, который слушает ваше приложение
  force_https = true     # Принудительное использование HTTPS
  auto_stop_machines = false  # Отключаем автоматическую остановку машин
  auto_start_machines = true  # Автоматически запускать машины при необходимости
  min_machines_running = 1    # Всегда держать хотя бы одну машину запущенной
  processes = ["app"]         # Указываем, что это основное приложение

[[services]]
  protocol = "tcp"            # Протокол (TCP для HTTP/HTTPS)
  internal_port = 8080        # Внутренний порт
  processes = ["app"]         # Указываем, что это основное приложение

  [[services.ports]]
    port = 80                 # Внешний порт для HTTP
    handlers = ["http"]       # Обработчик для HTTP
    force_https = true        # Принудительное перенаправление на HTTPS

  [[services.ports]]
    port = 443                # Внешний порт для HTTPS
    handlers = ["tls", "http"]  # Обработчики для HTTPS

  [services.concurrency]
    type = "connections"      # Тип ограничения (по количеству соединений)
    hard_limit = 25           # Максимальное количество соединений
    soft_limit = 20           # Рекомендуемое количество соединений

  [[services.http_checks]]    # Настройка проверки здоровья
    interval = "30s"          # Интервал проверки
    timeout = "5s"            # Время ожидания ответа
    grace_period = "60s"      # Время ожидания перед первой проверкой
    method = "get"            # Метод запроса (GET)
    path = "/health"          # Путь к эндпоинту проверки здоровья

[[vm]]
  memory = "1gb"              # Объем памяти для машины
  cpu_kind = "shared"         # Тип CPU (shared или performance)
  cpus = 1                    # Количество CPU
